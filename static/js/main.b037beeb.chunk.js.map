{"version":3,"sources":["components/PageHeader.js","components/controls/Button.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","components/useForm.js","services/employeeService.js","pages/Employees/EmployeeForm.js","pages/Employees/Employees.js","App/App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","root","backgroundColor","pageHeader","padding","spacing","display","marginBottom","pageIcon","color","pageTitle","paddingLeft","opacity","useStyles","margin","label","textTransform","Controls","Input","props","name","value","error","onChange","TextField","variant","helperText","RadioGroup","items","FormControl","FormLabel","row","map","item","FormControlLabel","key","id","control","Radio","title","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","Button","text","size","onClick","other","classes","width","Form","children","className","autoComplete","KEYS","insertEmployee","data","employees","localStorage","getItem","setItem","JSON","stringify","parse","getAllEmployees","parseInt","toString","generateEmployeeId","push","genderItems","initialFValues","fullName","email","mobile","city","gender","departmentId","hireDate","Date","isPermanent","EmployeeForm","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","x","validateOnChange","useState","setValues","handleInputChange","resetForm","useForm","onSubmit","preventDefault","employeeService","Grid","container","xs","type","pageContent","Employees","Paper","appMain","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b037beeb.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Paper, Card, Typography, makeStyles, Button } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: '#fdfdff'\r\n    },\r\n    pageHeader:{\r\n        padding:theme.spacing(4),\r\n        display:'flex',\r\n        marginBottom:theme.spacing(2)\r\n    },\r\n    pageIcon:{\r\n        display:'inline-block',\r\n        padding:theme.spacing(2),\r\n        color:'#3c44b1'\r\n    },\r\n    pageTitle:{\r\n        paddingLeft:theme.spacing(4),\r\n        '& .MuiTypography-subtitle2':{\r\n            opacity:'0.6'\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function PageHeader(props) {\r\n\r\n    const classes = useStyles();\r\n    const { title, subTitle, icon } = props;\r\n    return (\r\n        <Paper elevation={0} square className={classes.root}>\r\n            <div className={classes.pageHeader}>\r\n                <Card className={classes.pageIcon}>\r\n                    {icon}\r\n                </Card>\r\n                <div className={classes.pageTitle}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"div\">\r\n                        {title}</Typography>\r\n                    <Typography\r\n                        variant=\"subtitle2\"\r\n                        component=\"div\">\r\n                        {subTitle}</Typography>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}))\r\n\r\nexport default function Button(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MuiButton\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            classes={{ root: classes.root, label: classes.label }}>\r\n            {text}\r\n        </MuiButton>\r\n    )\r\n}\r\n","import Input from \"./Input\";\r\nimport RadioGroup from \"./RadioGroup\";\r\nimport Select from \"./Select\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport Button from \"./Button\";\r\n\r\nconst Controls = {\r\n    Input,\r\n    RadioGroup,\r\n    Select,\r\n    Checkbox,\r\n    DatePicker,\r\n    Button\r\n\r\n}\r\n\r\nexport default Controls;","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function Input(props) {\r\n\r\n    const { name, label, value,error=null, onChange } = props;\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...(error && {error:true,helperText:error})}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\n\r\nexport default function RadioGroup(props) {\r\n\r\n    const { name, label, value, onChange, items } = props;\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <MuiRadioGroup row\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {\r\n                    items.map(\r\n                        item => (\r\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\r\n                        )\r\n                    )\r\n                }\r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\r\n\r\nexport default function Select(props) {\r\n\r\n    const { name, label, value,error=null, onChange, options } = props;\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\"\r\n        {...(error && {error:true})}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect\r\n                label={label}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {\r\n                    options.map(\r\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                    )\r\n                }\r\n            </MuiSelect>\r\n            {error && <FormHelperText>{error}</FormHelperText>}\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\r\n\r\nexport default function Checkbox(props) {\r\n\r\n    const { name, label, value, onChange } = props;\r\n\r\n\r\n    const convertToDefEventPara = (name, value) => ({\r\n        target: {\r\n            name, value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormControlLabel\r\n                control={<MuiCheckbox\r\n                    name={name}\r\n                    color=\"primary\"\r\n                    checked={value}\r\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\r\n                />}\r\n                label={label}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nexport default function DatePicker(props) {\r\n\r\n    const { name, label, value, onChange } = props\r\n\r\n\r\n    const convertToDefEventPara = (name, value) => ({\r\n        target: {\r\n            name, value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\r\n                label={label}\r\n                format=\"MMM/dd/yyyy\"\r\n                name={name}\r\n                value={value}\r\n                onChange={date =>onChange(convertToDefEventPara(name,date))}\r\n\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport function useForm(initialFValues, validateOnChange = false, validate) {\r\n\r\n\r\n    const [values, setValues] = useState(initialFValues);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        if (validateOnChange)\r\n            validate({ [name]: value })\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFValues);\r\n        setErrors({})\r\n    }\r\n\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n\r\n    }\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiFormControl-root': {\r\n            width: '80%',\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nexport function Form(props) {\r\n\r\n    const classes = useStyles();\r\n    const { children, ...other } = props;\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\" {...other}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n}\r\n\r\n","const KEYS ={\r\n    employees:'employees',\r\n    employeeId:'employeeId'\r\n}\r\n\r\nexport const getDepartmentCollection = ()=>([\r\n    { id: '1', title: 'Development' },\r\n    { id: '2', title: 'Marketing' },\r\n    { id: '3', title: 'Accounting' },\r\n    { id: '4', title: 'HR' },\r\n])\r\n\r\nexport function insertEmployee(data) {\r\n    let employees=getAllEmployees();\r\n    data['id'] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees,JSON.stringify(employees))\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    return JSON.parse(localStorage.getItem(KEYS.employees));\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\n\r\n\r\nconst genderItems = [\r\n    { id: 'male', title: 'Male' },\r\n    { id: 'female', title: 'Female' },\r\n    { id: 'other', title: 'Other' },\r\n]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    mobile: '',\r\n    city: '',\r\n    gender: 'male',\r\n    departmentId: '',\r\n    hireDate: new Date(),\r\n    isPermanent: false,\r\n}\r\n\r\nexport default function EmployeeForm() {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        if ('departmentId' in fieldValues)\r\n            temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()){\r\n            employeeService.insertEmployee(values)\r\n            resetForm()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Mobile\"\r\n                        name=\"mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"City\"\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={employeeService.getDepartmentCollection()}\r\n                        error={errors.departmentId}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Checkbox\r\n                        name=\"isPermanent\"\r\n                        label=\"Permanent Employee\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport { Paper,makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    }\r\n}))\r\n\r\nexport default function Employees() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.pageContent}>\r\n                <EmployeeForm />\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport PageHeader from '../components/PageHeader';\r\n\r\nimport Employees from \"../pages/Employees/Employees\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  appMain: {\r\n    paddingLeft: '320px',\r\n    width: '100%'\r\n  }\r\n})\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n\r\n\r\n      <div className={classes.appMain}>\r\n        <Employees />\r\n      </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}